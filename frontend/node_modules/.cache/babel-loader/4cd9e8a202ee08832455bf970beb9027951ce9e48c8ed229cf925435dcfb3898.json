{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import '../css/LoginPage.css';\n// // import axios from 'axios';\n\n// function LoginPage() {\n//     const navigate = useNavigate();\n//     const { userType } = useParams();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState(null);\n\n//     const handleLogin = async (event) => {\n//         event.preventDefault();\n\n//         try {\n//             const response = await fetch('/auth/login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify({ uname: username, password: password })\n//             });\n\n//             if (!response.ok) {\n//                 const errorMessage = await response.json();\n//                 throw new Error(errorMessage.message);\n//             }\n\n//             const data = await response.json();\n//             localStorage.setItem('token', data.token); // Store token in local storage\n//             let redirectPath = '/';\n//             switch (userType) {\n//                 case 'superadmin':\n//                     redirectPath = '/superadmin/dashboard';\n//                     break;\n//                 case 'admin':\n//                     redirectPath = '/admin/dashboard';\n//                     break;\n//                 case 'department':\n//                     redirectPath = '/department/dashboard';\n//                     break;\n//                 default:\n//                     redirectPath = '/dashboard';\n//             }\n//             navigate(redirectPath);\n//         } catch (error) {\n//             setError(error.message);\n//         }\n//     };\n\n//     const title = userType ? `Login (${userType.charAt(0).toUpperCase() + userType.slice(1)})` : 'Login';\n\n//     return (\n//         <div className=\"login-container\">\n//             <form className=\"login-form\" onSubmit={handleLogin}>\n//                 <h2>{title}</h2>\n//                 {error && <div className=\"error-message\">{error}</div>}\n//                 <div className=\"input-group\">\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                 </div>\n//                 <div className=\"input-group\">\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//                 </div>\n//                 <button type=\"submit\" className=\"login-button\">Sign In</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["D:/Creative and innovative project/report-your-issue/frontend/src/component/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import '../css/LoginPage.css';\r\n// // import axios from 'axios';\r\n\r\n// function LoginPage() {\r\n//     const navigate = useNavigate();\r\n//     const { userType } = useParams();\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState(null);\r\n\r\n//     const handleLogin = async (event) => {\r\n//         event.preventDefault();\r\n        \r\n//         try {\r\n//             const response = await fetch('/auth/login', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify({ uname: username, password: password })\r\n//             });\r\n\r\n//             if (!response.ok) {\r\n//                 const errorMessage = await response.json();\r\n//                 throw new Error(errorMessage.message);\r\n//             }\r\n\r\n//             const data = await response.json();\r\n//             localStorage.setItem('token', data.token); // Store token in local storage\r\n//             let redirectPath = '/';\r\n//             switch (userType) {\r\n//                 case 'superadmin':\r\n//                     redirectPath = '/superadmin/dashboard';\r\n//                     break;\r\n//                 case 'admin':\r\n//                     redirectPath = '/admin/dashboard';\r\n//                     break;\r\n//                 case 'department':\r\n//                     redirectPath = '/department/dashboard';\r\n//                     break;\r\n//                 default:\r\n//                     redirectPath = '/dashboard';\r\n//             }\r\n//             navigate(redirectPath);\r\n//         } catch (error) {\r\n//             setError(error.message);\r\n//         }\r\n//     };\r\n\r\n//     const title = userType ? `Login (${userType.charAt(0).toUpperCase() + userType.slice(1)})` : 'Login';\r\n\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <form className=\"login-form\" onSubmit={handleLogin}>\r\n//                 <h2>{title}</h2>\r\n//                 {error && <div className=\"error-message\">{error}</div>}\r\n//                 <div className=\"input-group\">\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                 </div>\r\n//                 <div className=\"input-group\">\r\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"login-button\">Sign In</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default LoginPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}