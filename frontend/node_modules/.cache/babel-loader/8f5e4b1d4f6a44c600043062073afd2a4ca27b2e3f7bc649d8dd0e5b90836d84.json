{"ast":null,"code":"// import React, { useState } from 'react';\n// // import { useParams } from 'react-router-dom';\n// import { Document, Page, Text, StyleSheet, View, Image, BlobProvider } from '@react-pdf/renderer';\n// import '../css/ComplaintsForm.css';\n// // import ComplaintsTable from './ComplaintsTable';\n\n// import logo from '../img/home/image1.jpg';\n// // import seal from '../img/home/image1.jpg';\n// // import signaturePlaceholder from '../img/home/image1.jpg';\n\n// // Styles for the PDF document\n// const styles = StyleSheet.create({\n//     page: {\n//         padding: 30,\n//         // fontFamily: 'Arial, sans-serif',\n//         fontSize: 12,\n//         color: '#333',\n//     },\n//     header: {\n//         flexDirection: 'row',\n//         justifyContent: 'center',\n//         marginBottom: 20,\n//     },\n//     logo: {\n//         width: 120,\n//         height: 60,\n//     },\n//     title: {\n//         textAlign: 'center',\n//         fontSize: 24,\n//         fontWeight: 'bold',\n//         marginBottom: 20,\n//     },\n//     table: {\n//         display: 'table',\n//         width: '100%',\n//         marginBottom: 20,\n//     },\n//     tableRow: {\n//         flexDirection: 'row',\n//         display: 'table-row',\n//     },\n//     tableCellLabel: {\n//         display: 'table-cell',\n//         width: '30%',\n//         fontWeight: 'bold',\n//         paddingRight: 10,\n//     },\n//     tableCellValue: {\n//         display: 'table-cell',\n//     },\n//     footer: {\n//         marginTop: 20,\n//         fontSize: 12,\n//         textAlign: 'center',\n//     },\n//     signaturesContainer: {\n//         marginTop: 20,\n//         flexDirection: 'row',\n//         justifyContent: 'center',\n//     },\n//     signature: {\n//         width: 100,\n//         height: 50,\n//         marginHorizontal: 20,\n//     },\n// });\n\n// function ComplaintForm({ onSubmit }) {\n//     // const { userType } = useParams();\n//     const [complaintData, setComplaintData] = useState({\n//         assignedWorker: '', // Initially empty\n//         status: 'Pending',\n//         // ... (initial form data)\n//     });\n//     const [showPreview, setShowPreview] = useState(false);\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setComplaintData({ ...complaintData, [name]: value });\n//     };\n\n//     const handleImageChange = (e) => {\n//         setComplaintData({ ...complaintData, image: e.target.files[0] });\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         setShowPreview(true);\n//     };\n\n//     const handleEdit = () => {\n//         setShowPreview(false);\n//     };\n\n//     const handleFinalSubmit = (e) => {\n//         // Logic to submit form data to the server\n//         console.log('Final submission:', complaintData);\n//         onSubmit(complaintData);\n//         // Redirect or show a success message\n//     };\n\n//     const ComplaintDocument = (\n//         <Document>\n//             <Page size=\"A4\" style={styles.page}>\n//                 <View style={styles.header}>\n//                     <Image style={styles.logo} src={logo} />\n//                 </View>\n\n//                 <Text style={styles.title}>Complaint Form</Text>\n\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Identifier:</Text>\n//                     <Text style={styles.value}>{complaintData.identifier}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Title:</Text>\n//                     <Text style={styles.value}>{complaintData.title}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Issue:</Text>\n//                     <Text style={styles.value}>{complaintData.issue}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Location:</Text>\n//                     <Text style={styles.value}>{complaintData.location}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Nature of the Complaint:</Text>\n//                     <Text style={styles.value}>{complaintData.nature}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Phone Number:</Text>\n//                     <Text style={styles.value}>{complaintData.phone}</Text>\n//                 </View>\n//                 <View style={styles.fieldContainer}>\n//                     <Text style={styles.label}>Priority:</Text>\n//                     <Text style={styles.value}>{complaintData.priority}</Text>\n//                 </View>\n//                 {complaintData.image && (\n//                     <View style={styles.fieldContainer}>\n//                         <Text style={styles.label}>Image Attached:</Text>\n//                         <Text style={styles.value}>{complaintData.image.name}</Text>\n//                     </View>\n//                 )}\n\n//                 <Text style={styles.footer}>\n//                     This is an electronic copy of the official complaint form.\n//                 </Text>\n//             </Page>\n//         </Document>\n//     );\n\n//     return (\n//         <div className=\"complaint-form-container\" onClick={(e) => e.stopPropagation()}>\n//             {!showPreview ? (\n//                 <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n//                     <h1>Complaint Form</h1>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"identifier\">Identifier</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"identifier\"\n//                             name=\"identifier\"\n//                             value={complaintData.identifier}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"title\">Title</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             value={complaintData.title}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"issue\">Issue</label>\n//                         <textarea\n//                             id=\"issue\"\n//                             name=\"issue\"\n//                             value={complaintData.issue}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"location\">Location</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             value={complaintData.location}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"nature\">Nature of the Complaint</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"nature\"\n//                             name=\"nature\"\n//                             value={complaintData.nature}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"phone\">Phone Number</label>\n//                         <input\n//                             type=\"tel\"\n//                             id=\"phone\"\n//                             name=\"phone\"\n//                             value={complaintData.phone}\n//                             onChange={handleChange}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"priority\">Priority</label>\n//                         <select\n//                             id=\"priority\"\n//                             name=\"priority\"\n//                             value={complaintData.priority}\n//                             onChange={handleChange}\n//                             required\n//                         >\n//                             <option value=\"low\">Low</option>\n//                             <option value=\"medium\">Medium</option>\n//                             <option value=\"high\">High</option>\n//                         </select>\n//                     </div>\n//                     <div className=\"input-group\">\n//                         <label htmlFor=\"image\">Image (Optional)</label>\n//                         <input\n//                             type=\"file\"\n//                             id=\"image\"\n//                             name=\"image\"\n//                             onChange={handleImageChange}\n//                             accept=\"image/*\"\n//                         />\n//                     </div>\n//                     <input type=\"hidden\" name=\"assignedWorker\" value={complaintData.assignedWorker} />\n//                     <input type=\"hidden\" name=\"status\" value={complaintData.status} />\n//                     <button type=\"submit\">Submit Complaint</button>\n//                 </form>\n//             ) : (\n//                 <BlobProvider document={ComplaintDocument}>\n//                     {({ blob, url, loading, error }) => {\n//                         if (loading) {\n//                             return <div>Loading preview...</div>;\n//                         }\n//                         return (\n//                             <div>\n//                                 <iframe src={url} style={{ width: '100%', height: '580px' }} title=\"Preview\" />\n//                                 <div>\n//                                     {/* <ComplaintsTable complaints={[complaintData]} /> */}\n//                                     <button onClick={handleEdit}>Edit</button>\n//                                     <button onClick={handleFinalSubmit}>Confirm and Submit</button>\n//                                     <a href={url} download=\"ComplaintDetails.pdf\">\n//                                         <button>Download PDF</button>\n//                                     </a>\n//                                 </div>\n//                             </div>\n//                         );\n//                     }}\n//                 </BlobProvider>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default ComplaintForm;","map":{"version":3,"names":[],"sources":["D:/Creative and innovative project/report-your-issue/src/component/ComplaintForm.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// // import { useParams } from 'react-router-dom';\r\n// import { Document, Page, Text, StyleSheet, View, Image, BlobProvider } from '@react-pdf/renderer';\r\n// import '../css/ComplaintsForm.css';\r\n// // import ComplaintsTable from './ComplaintsTable';\r\n\r\n// import logo from '../img/home/image1.jpg';\r\n// // import seal from '../img/home/image1.jpg';\r\n// // import signaturePlaceholder from '../img/home/image1.jpg';\r\n\r\n\r\n// // Styles for the PDF document\r\n// const styles = StyleSheet.create({\r\n//     page: {\r\n//         padding: 30,\r\n//         // fontFamily: 'Arial, sans-serif',\r\n//         fontSize: 12,\r\n//         color: '#333',\r\n//     },\r\n//     header: {\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'center',\r\n//         marginBottom: 20,\r\n//     },\r\n//     logo: {\r\n//         width: 120,\r\n//         height: 60,\r\n//     },\r\n//     title: {\r\n//         textAlign: 'center',\r\n//         fontSize: 24,\r\n//         fontWeight: 'bold',\r\n//         marginBottom: 20,\r\n//     },\r\n//     table: {\r\n//         display: 'table',\r\n//         width: '100%',\r\n//         marginBottom: 20,\r\n//     },\r\n//     tableRow: {\r\n//         flexDirection: 'row',\r\n//         display: 'table-row',\r\n//     },\r\n//     tableCellLabel: {\r\n//         display: 'table-cell',\r\n//         width: '30%',\r\n//         fontWeight: 'bold',\r\n//         paddingRight: 10,\r\n//     },\r\n//     tableCellValue: {\r\n//         display: 'table-cell',\r\n//     },\r\n//     footer: {\r\n//         marginTop: 20,\r\n//         fontSize: 12,\r\n//         textAlign: 'center',\r\n//     },\r\n//     signaturesContainer: {\r\n//         marginTop: 20,\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'center',\r\n//     },\r\n//     signature: {\r\n//         width: 100,\r\n//         height: 50,\r\n//         marginHorizontal: 20,\r\n//     },\r\n// });\r\n\r\n\r\n// function ComplaintForm({ onSubmit }) {\r\n//     // const { userType } = useParams();\r\n//     const [complaintData, setComplaintData] = useState({\r\n//         assignedWorker: '', // Initially empty\r\n//         status: 'Pending',\r\n//         // ... (initial form data)\r\n//     });\r\n//     const [showPreview, setShowPreview] = useState(false);\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setComplaintData({ ...complaintData, [name]: value });\r\n//     };\r\n\r\n//     const handleImageChange = (e) => {\r\n//         setComplaintData({ ...complaintData, image: e.target.files[0] });\r\n//     };\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         setShowPreview(true);\r\n//     };\r\n\r\n//     const handleEdit = () => {\r\n//         setShowPreview(false);\r\n//     };\r\n\r\n//     const handleFinalSubmit = (e) => {\r\n//         // Logic to submit form data to the server\r\n//         console.log('Final submission:', complaintData);\r\n//         onSubmit(complaintData);\r\n//         // Redirect or show a success message\r\n//     };\r\n\r\n//     const ComplaintDocument = (\r\n//         <Document>\r\n//             <Page size=\"A4\" style={styles.page}>\r\n//                 <View style={styles.header}>\r\n//                     <Image style={styles.logo} src={logo} />\r\n//                 </View>\r\n\r\n//                 <Text style={styles.title}>Complaint Form</Text>\r\n\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Identifier:</Text>\r\n//                     <Text style={styles.value}>{complaintData.identifier}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Title:</Text>\r\n//                     <Text style={styles.value}>{complaintData.title}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Issue:</Text>\r\n//                     <Text style={styles.value}>{complaintData.issue}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Location:</Text>\r\n//                     <Text style={styles.value}>{complaintData.location}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Nature of the Complaint:</Text>\r\n//                     <Text style={styles.value}>{complaintData.nature}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Phone Number:</Text>\r\n//                     <Text style={styles.value}>{complaintData.phone}</Text>\r\n//                 </View>\r\n//                 <View style={styles.fieldContainer}>\r\n//                     <Text style={styles.label}>Priority:</Text>\r\n//                     <Text style={styles.value}>{complaintData.priority}</Text>\r\n//                 </View>\r\n//                 {complaintData.image && (\r\n//                     <View style={styles.fieldContainer}>\r\n//                         <Text style={styles.label}>Image Attached:</Text>\r\n//                         <Text style={styles.value}>{complaintData.image.name}</Text>\r\n//                     </View>\r\n//                 )}\r\n\r\n//                 <Text style={styles.footer}>\r\n//                     This is an electronic copy of the official complaint form.\r\n//                 </Text>\r\n//             </Page>\r\n//         </Document>\r\n//     );\r\n\r\n\r\n\r\n\r\n//     return (\r\n//         <div className=\"complaint-form-container\" onClick={(e) => e.stopPropagation()}>\r\n//             {!showPreview ? (\r\n//                 <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n//                     <h1>Complaint Form</h1>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"identifier\">Identifier</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"identifier\"\r\n//                             name=\"identifier\"\r\n//                             value={complaintData.identifier}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"title\">Title</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"title\"\r\n//                             name=\"title\"\r\n//                             value={complaintData.title}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"issue\">Issue</label>\r\n//                         <textarea\r\n//                             id=\"issue\"\r\n//                             name=\"issue\"\r\n//                             value={complaintData.issue}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"location\">Location</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"location\"\r\n//                             name=\"location\"\r\n//                             value={complaintData.location}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"nature\">Nature of the Complaint</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             id=\"nature\"\r\n//                             name=\"nature\"\r\n//                             value={complaintData.nature}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"phone\">Phone Number</label>\r\n//                         <input\r\n//                             type=\"tel\"\r\n//                             id=\"phone\"\r\n//                             name=\"phone\"\r\n//                             value={complaintData.phone}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"priority\">Priority</label>\r\n//                         <select\r\n//                             id=\"priority\"\r\n//                             name=\"priority\"\r\n//                             value={complaintData.priority}\r\n//                             onChange={handleChange}\r\n//                             required\r\n//                         >\r\n//                             <option value=\"low\">Low</option>\r\n//                             <option value=\"medium\">Medium</option>\r\n//                             <option value=\"high\">High</option>\r\n//                         </select>\r\n//                     </div>\r\n//                     <div className=\"input-group\">\r\n//                         <label htmlFor=\"image\">Image (Optional)</label>\r\n//                         <input\r\n//                             type=\"file\"\r\n//                             id=\"image\"\r\n//                             name=\"image\"\r\n//                             onChange={handleImageChange}\r\n//                             accept=\"image/*\"\r\n//                         />\r\n//                     </div>\r\n//                     <input type=\"hidden\" name=\"assignedWorker\" value={complaintData.assignedWorker} />\r\n//                     <input type=\"hidden\" name=\"status\" value={complaintData.status} />\r\n//                     <button type=\"submit\">Submit Complaint</button>\r\n//                 </form>\r\n//             ) : (\r\n//                 <BlobProvider document={ComplaintDocument}>\r\n//                     {({ blob, url, loading, error }) => {\r\n//                         if (loading) {\r\n//                             return <div>Loading preview...</div>;\r\n//                         }\r\n//                         return (\r\n//                             <div>\r\n//                                 <iframe src={url} style={{ width: '100%', height: '580px' }} title=\"Preview\" />\r\n//                                 <div>\r\n//                                     {/* <ComplaintsTable complaints={[complaintData]} /> */}\r\n//                                     <button onClick={handleEdit}>Edit</button>\r\n//                                     <button onClick={handleFinalSubmit}>Confirm and Submit</button>\r\n//                                     <a href={url} download=\"ComplaintDetails.pdf\">\r\n//                                         <button>Download PDF</button>\r\n//                                     </a>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     }}\r\n//                 </BlobProvider>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ComplaintForm;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}